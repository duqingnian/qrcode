name: CMake Windows Build and Release

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest

    env:
      BUILD_TYPE: Release

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Qt and OpenSSL dependencies
        run: |
          choco install -y qt6-win-static openssl
          set PATH=C:\Qt\6.5.0\msvc2019_64_static\bin;%PATH%  # Adjust path based on Qt static version installed

      - name: Configure CMake
        run: cmake -B build -S . -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }} -DCMAKE_PREFIX_PATH="C:\Qt\6.5.0\msvc2019_64_static" -DOPENSSL_USE_STATIC_LIBS=TRUE

      - name: Build project
        run: cmake --build build --config ${{ env.BUILD_TYPE }}

      - name: Package executable
        run: |
          mkdir release
          cp build\Release\Qrcode.exe release\
      
      - name: Upload release asset
        uses: actions/upload-artifact@v3
        with:
          name: Qrcode
          path: release/Qrcode.exe

  release:
    needs: build
    runs-on: windows-latest
    if: startsWith(github.ref, 'refs/tags/')

    steps:
      - name: Download build artifact
        uses: actions/download-artifact@v3
        with:
          name: Qrcode

      - name: Create GitHub Release
        uses: ncipollo/release-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          artifacts: Qrcode.exe
          tag: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          body: "Automated release of Qrcode v${{ github.ref_name }}"
          draft: false
          prerelease: false
